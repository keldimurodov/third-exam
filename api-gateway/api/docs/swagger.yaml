definitions:
  models.Comments:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      owner_id:
        type: string
      post_id:
        type: string
      text:
        type: string
      updated_at:
        type: string
    type: object
  models.Error:
    properties:
      message:
        type: string
    type: object
  models.Post:
    properties:
      categories:
        type: string
      comments:
        items:
          $ref: '#/definitions/models.Comments'
        type: array
      content:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      dislikes:
        type: integer
      id:
        type: string
      likes:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      userID:
        type: string
      views:
        type: integer
    type: object
  models.PostComments:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      owner_id:
        type: string
      post_id:
        type: string
      text:
        type: string
      updated_at:
        type: string
    type: object
  models.PostRequest:
    properties:
      categories:
        type: string
      content:
        type: string
      dislikes:
        type: integer
      likes:
        type: integer
      title:
        type: string
      user_id:
        type: string
      views:
        type: integer
    type: object
  models.ResponseUser:
    properties:
      bio:
        type: string
      code:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
      website:
        type: string
    type: object
  models.StandardErrorModel:
    properties:
      error:
        $ref: '#/definitions/models.Error'
    type: object
  models.User:
    properties:
      bio:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: string
      last_name:
        type: string
      name:
        type: string
      password:
        type: string
      updated_at:
        type: string
      username:
        type: string
      website:
        type: string
    type: object
  models.UserDetail:
    properties:
      bio:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
      website:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a example of USER SERVICE, POST SERVICE and COMMENT SERVICE.
    Author Sardor Keldimurodov
  title: Welcome to API-GATEWAY
  version: "1.0"
paths:
  /v1/comment/:
    post:
      consumes:
      - application/json
      description: Api for creating a new comment
      parameters:
      - description: createComment
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.PostComments'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PostComments'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: CreateComment ...
      tags:
      - comment
  /v1/comment/{id}:
    delete:
      consumes:
      - application/json
      description: Api deletes post
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: Delete Comment by id
      tags:
      - comment
    get:
      consumes:
      - application/json
      description: Api for getting comment by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PostComments'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetComment
      tags:
      - comment
    put:
      consumes:
      - application/json
      description: Api returns updates comment
      parameters:
      - description: UpdateComment
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.PostComments'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: Update Commment
      tags:
      - comment
  /v1/comments/:
    get:
      consumes:
      - application/json
      description: Api returns list of comments from
      parameters:
      - description: Page
        in: path
        name: page
        required: true
        type: integer
      - description: Limit
        in: path
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: All comments from the service
      tags:
      - comment
  /v1/login:
    get:
      consumes:
      - application/json
      description: LogIn - Api for login users
      parameters:
      - description: Email
        in: query
        name: email
        required: true
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: LogIn User
      tags:
      - registr
  /v1/post/:
    post:
      consumes:
      - application/json
      description: Api for creating a new post
      parameters:
      - description: createPost
        in: body
        name: Post
        required: true
        schema:
          $ref: '#/definitions/models.PostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: Create Post ...
      tags:
      - post
  /v1/post/{id}:
    delete:
      consumes:
      - application/json
      description: Api deletes post
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: Delete Post
      tags:
      - post
    get:
      consumes:
      - application/json
      description: Api for getting post by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetPost
      tags:
      - post
    put:
      consumes:
      - application/json
      description: Api returns updates post
      parameters:
      - description: UpdatePost
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: UpdatePost
      tags:
      - post
  /v1/posts/:
    get:
      consumes:
      - application/json
      description: Api returns list of posts
      parameters:
      - description: Page
        in: path
        name: page
        required: true
        type: integer
      - description: Limit
        in: path
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: All posts
      tags:
      - post
  /v1/sign/:
    post:
      consumes:
      - application/json
      description: Sign - Api for registring users
      parameters:
      - description: UserDetail
        in: body
        name: registr
        required: true
        schema:
          $ref: '#/definitions/models.UserDetail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: Sign User
      tags:
      - registr
  /v1/user/:
    post:
      consumes:
      - application/json
      description: Api for creating a new user
      parameters:
      - description: createUserModel
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: CreateUser
      tags:
      - user
  /v1/user/{id}:
    delete:
      consumes:
      - application/json
      description: Api deleted user
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: DeleteUser
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Api for getting user by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetUser
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Api returns updates user
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: UpdateUser
      tags:
      - user
  /v1/users/:
    get:
      consumes:
      - application/json
      description: Api returns list of users
      parameters:
      - description: Page
        in: path
        name: page
        required: true
        type: integer
      - description: Limit
        in: path
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetAllUser
      tags:
      - user
  /v1/verification:
    get:
      consumes:
      - application/json
      description: LogIn - Api for verification users
      parameters:
      - description: Email
        in: query
        name: email
        required: true
        type: string
      - description: Code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: Verification User
      tags:
      - registr
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
